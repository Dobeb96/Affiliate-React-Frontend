{"version":3,"sources":["redux/actions/index.js","components/Item/Item.js","components/ItemGallery/ItemGallery.js","components/ItemGallery/ItemGalleryCategorical.js","App.js","serviceWorker.js","redux/reducers/requestReducer.js","redux/reducers/index.js","index.js"],"names":["itemsRequestStarted","options","type","appendItems","itemsRequestSuccess","json","response","page","fetchItemCategories","dispatch","a","apiEndpoint","process","axios","get","then","fetchItems","_prepareItemsRequest","params","Object","entries","forEach","param","undefined","push","stringParams","join","Item","price_raw","parseFloat","toFixed","className","href","this","props","item","url","target","src","photos","alt","name","priceFormat","price_current","to","color","fontSize","React","Component","ItemGallery","buildFetchItems","bind","category","slug","items","isLoading","Math","max","data","nextPage","loadMore","hasMore","loader","key","threshold","map","e","sku","connect","state","itemsReducer","ItemGalleryCategorical","CategoryList","categories","i","onClick","setState","categoriesReducer","App","id","Grid","container","direction","justify","alignItems","lg","placeholder","exact","path","Boolean","window","location","hostname","match","initialState","error","allReducers","combineReducers","action","assign","concat","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.778381e0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const itemsRequestStarted = (options) => {\r\n    return {\r\n      type: 'ITEMS_REQUEST_STARTED',\r\n      appendItems: options.appendItems\r\n    }\r\n}\r\n\r\nexport const itemsRequestSuccess = (json, options) => {\r\n    return {\r\n      type: 'ITEMS_REQUEST_SUCCESS',\r\n      response: json,\r\n      page: options.page,\r\n      appendItems: options.appendItems\r\n    }\r\n}\r\n\r\nexport const itemsRequestFailed = (error) => {\r\n    return { type: 'ITEMS_REQUEST_FAILED', error: error }\r\n}\r\n\r\nexport const categoriesRequestStarted = () => {\r\n    return { type: 'CATEGORIES_REQUEST_STARTED' }\r\n}\r\n\r\nexport const categoriesRequestSuccess = (json) => {\r\n    return { type: 'CATEGORIES_REQUEST_SUCCESS', response: json }\r\n}\r\n\r\nexport const categoriesRequestFailed = (error) => {\r\n    return { type: 'CATEGORIES_REQUEST_FAILED', error: error }\r\n}\r\n\r\nexport function fetchItemCategories() {\r\n    return async function (dispatch) {\r\n        dispatch(categoriesRequestStarted())\r\n\r\n        let apiEndpoint = `${process.env.REACT_APP_API_ENDPOINT}/categories`\r\n\r\n        axios\r\n            .get(apiEndpoint)\r\n            .then( response => dispatch(categoriesRequestSuccess(response)) )\r\n    }\r\n}\r\n\r\nexport function fetchItems(options) {\r\n    return async function (dispatch) {\r\n        dispatch(itemsRequestStarted(options))\r\n\r\n        let apiEndpoint = _prepareItemsRequest(options)\r\n\r\n        axios\r\n            .get(apiEndpoint)\r\n            .then( response => dispatch(itemsRequestSuccess(response, options)) )\r\n    }\r\n}\r\n\r\nfunction _prepareItemsRequest(options) {\r\n    let apiEndpoint = `${process.env.REACT_APP_API_ENDPOINT}/items`\r\n    let params = []\r\n    Object.entries(options).forEach(param => {\r\n        if (param[1] !== undefined) { params.push(`${param[0]}=${param[1]}`) }\r\n    })\r\n    let stringParams = params.join('&')\r\n\r\n    if (stringParams !== '') { return `${apiEndpoint}?${stringParams}` }\r\n    return `${apiEndpoint}`\r\n}\r\n","import React from \"react\";\r\nimport \"./Item.scss\"\r\nimport MdHeartOutline from 'react-ionicons/lib/MdHeartOutline'\r\n\r\nclass Item extends React.Component {\r\n    priceFormat(price_raw) {\r\n        let price = parseFloat(price_raw)\r\n        return price.toFixed(0)\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"card\">\r\n            <a href={this.props.item.url} target=\"_blank\">\r\n                <div className=\"card-image-wrapper\">\r\n                    <img\r\n                        className=\"card-image\"\r\n                        src={this.props.item.photos[0].url}\r\n                        alt={this.props.item.name}\r\n                    />\r\n                </div>\r\n                <div className=\"item-header\">\r\n                    <h3 className=\"item-name\">{this.props.item.name}</h3>\r\n                    <div className=\"item-price\">\r\n                        {this.priceFormat(this.props.item.price_current)} z≈Ç\r\n                    </div>\r\n                </div>\r\n            </a>\r\n            <div className=\"card-content-hover\">\r\n                <div className=\"btn-primary btn-round-small btn-hover-darken flex-middle item-favourite\" to=\"/\">\r\n                    <MdHeartOutline color=\"white\" fontSize=\"1.5em\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport \"./ItemGallery.scss\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchItems } from \"../../redux/actions\";\r\nimport Item from \"../Item/Item\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nclass ItemGallery extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.buildFetchItems = this.buildFetchItems.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchItems({ category: this.props.category, slug: this.props.slug })\r\n    }\r\n\r\n    buildFetchItems() {\r\n        if (!this.props.items.isLoading) {\r\n            this.props.fetchItems({\r\n                category: this.props.category,\r\n                slug: this.props.slug,\r\n                appendItems: true,\r\n                page: Math.max(1, this.props.items.response.data.nextPage) })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // https://www.npmjs.com/package/react-infinite-scroller\r\n        return <InfiniteScroll\r\n            loadMore={this.buildFetchItems}\r\n            hasMore={this.props.items.response.data.hasMore}\r\n            loader={<div key=\"spinner\" className=\"spinner-loading\"><BounceLoader color=\"#fa6266\" /></div>}\r\n            threshold={800}\r\n            className=\"item-gallery-layout\">\r\n            {this.props.items.response.data.items.map((e) =>\r\n                <Item key={e.sku} item={e} />\r\n            )}\r\n        </InfiniteScroll>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.itemsReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        fetchItems,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(ItemGallery);\r\n","import React from \"react\";\r\nimport ItemGallery from \"./ItemGallery.js\"\r\nimport { connect } from \"react-redux\";\r\nimport { fetchItemCategories } from \"../../redux/actions\";\r\n\r\nclass ItemGalleryCategorical extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          category: 'ceiling' // default category to be loaded\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchItemCategories()\r\n    }\r\n\r\n    render() {\r\n        let CategoryList = this.props.categories.isLoading ?\r\n            <></> :\r\n            <ul className=\"categories-selector\">\r\n                {this.props.categories.response.data.map((e, i) =>\r\n                    <li key={e.slug}\r\n                        className={\"category \" + (this.state.category === e.slug ? \"active\" : \"\")}\r\n                        onClick={() => this.setState({category: e.slug })}>\r\n                        {e.name}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n\r\n        return <>\r\n            {CategoryList}\r\n            <ItemGallery key={\"category\" + this.state.category} category=\"categorical\" slug={this.state.category} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.categoriesReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n        fetchItemCategories,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps())(ItemGalleryCategorical);\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport ItemGallery from \"./components/ItemGallery/ItemGallery.js\"\r\nimport ItemGalleryCategorical from \"./components/ItemGallery/ItemGalleryCategorical.js\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport \"./App.scss\"\r\nimport IosArrowDown from 'react-ionicons/lib/IosArrowDown'\r\nimport IosContactOutline from 'react-ionicons/lib/IosContactOutline'\r\nimport MdSearch from 'react-ionicons/lib/MdSearch'\r\nimport MdHeartOutline from 'react-ionicons/lib/MdHeartOutline'\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <Router>\r\n      <div className=\"content\">\r\n        <nav id=\"nav\" className=\"nav\">\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <div className=\"m-right\">{/* Empty div for easier flex positioning */}</div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              item={true}\r\n              lg={10}\r\n            >\r\n              <Link className=\"btn-primary\" to=\"/\">Strona g≈Ç√≥wna</Link>\r\n              <Link className=\"btn-primary\" to=\"/popularne\">Popularne</Link>\r\n              <Link className=\"btn-primary\" to=\"/kategorie\">Kategorie</Link>\r\n              <Link className=\"btn-primary\" to=\"/ostatnio-przegladane\">Ostatnio przeglƒÖdane</Link>\r\n              <div className=\"relative\">\r\n                <input className=\"search main-search\" type=\"text\" placeholder=\"Szukaj..\" name=\"main-search\"></input>\r\n                <MdSearch className=\"search-icon\" color=\"#888\" fontSize=\"1.8em\" />\r\n              </div>\r\n              <Link className=\"btn-primary btn-round flex-middle\" to=\"/ulubione\">\r\n                <MdHeartOutline color=\"white\" fontSize=\"1.5em\" />\r\n              </Link>\r\n            </Grid>\r\n            <div className=\"btn flex-middle\">\r\n                <IosContactOutline color=\"black\" fontSize=\"3em\" />\r\n                <IosArrowDown color=\"black\" fontSize=\"1.5em\" />\r\n              </div>\r\n          </Grid>\r\n        </nav>\r\n\r\n        {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n        <Switch>\r\n          <Route exact path=\"/popularne\">\r\n            <ItemGallery key=\"popular\" category=\"popular\" />\r\n          </Route>\r\n          <Route exact path=\"/kategorie\">\r\n            <ItemGalleryCategorical key=\"categorical\" />\r\n          </Route>\r\n          <Route exact path=\"/ostatnio-przegladane\">\r\n            <ItemGallery key=\"last-viewed\" category=\"last-viewed\" />\r\n          </Route>\r\n          <Route exact path=\"/ulubione\">\r\n            <ItemGallery key=\"favourites\" category=\"favourites\" />\r\n          </Route>\r\n          <Route exact path=\"*\">\r\n            <ItemGallery key=\"home\" />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n    isLoading: true,\r\n    response: {data: {items: []}},\r\n    error: null,\r\n}\r\n\r\nconst itemsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'ITEMS_REQUEST_STARTED':\r\n            if (action.appendItems) { return Object.assign({}, state, { isLoading: true }) }\r\n            return Object.assign({}, state, { isLoading: true, response: initialState.response })\r\n        case 'ITEMS_REQUEST_SUCCESS':\r\n            if (!action.appendItems) { state = initialState }\r\n            let appendItems = state.response.data.items.concat(action.response.data.items)\r\n            action.response.data.items = appendItems\r\n            return Object.assign({}, state, { isLoading: false, response: action.response })\r\n        case 'ITEMS_REQUEST_FAILED':\r\n            return Object.assign({}, state, { isLoading: false, error: action.error })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst categoriesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'CATEGORIES_REQUEST_STARTED':\r\n            return Object.assign({}, state, { isLoading: true })\r\n        case 'CATEGORIES_REQUEST_SUCCESS':\r\n            return Object.assign({}, state, { isLoading: false, response: action.response })\r\n        case 'CATEGORIES_REQUEST_FAILED':\r\n            return Object.assign({}, state, { isLoading: false, error: action.error })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport { itemsReducer, categoriesReducer };\r\n","import { itemsReducer, categoriesReducer } from './requestReducer';\r\nimport { combineReducers } from 'redux'\r\n\r\nconst allReducers = combineReducers({\r\n    itemsReducer,\r\n    categoriesReducer,\r\n})\r\n\r\nexport default allReducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport allReducers from './redux/reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}